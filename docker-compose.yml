services:
  ally_api:
    container_name: ally_api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '${PORT:-3000}:${PORT:-3000}'
    env_file:
      - .env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - ally_net
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    restart: always
    depends_on:
      storage:
        condition: service_started
      postgres:
        condition: service_healthy
  postgres:
    container_name: ally_postgres
    image: postgres:15
    restart: always
    ports:
      - '${DB_PORT:-5432}:5432'
    environment:
      POSTGRES_DB: ${DB_DATABASE:-db_ally_release1}
      POSTGRES_USER: ${DB_USERNAME:-ally}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-ally}
    volumes:
      - db_data_pg:/var/lib/postgresql/data
    networks:
      - ally_net
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USERNAME:-ally} -d ${DB_NAME:-db_ally_release1}']
      interval: 10s
      timeout: 5s
      retries: 5

  storage:
    image: minio/minio:latest
    container_name: ally_minio
    hostname: storage
    environment:
      MINIO_ACCESS_KEY: ${STORAGE_ACCESS_KEY}
      MINIO_SECRET_KEY: ${STORAGE_SECRET_KEY}
    ports:
      - '9000:9000'
      - '9001:9001'
    command: server /data --console-address ":9001"
    restart: always
    volumes:
      - 'minio_data:/data'
    networks:
      - ally_net
    extra_hosts:
      - 'host.docker.internal:host-gateway'

networks:
  ally_net:
    driver: bridge

volumes:
  db_data_pg:
    driver: local
  minio_data:
    driver: local
